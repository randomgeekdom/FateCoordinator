@page "/"
@using FateCoordinator.Contracts
@using FateCoordinator.Repositories
@using FateCoordinator.Extensions

@inject ICharacterRepository characterRepository;
@inject IGameRepository gameRepository;
@inject AuthenticationStateProvider authenticationStateProvider;

<AuthorizeView>
    <Authorized>
        <h1>Dashboard</h1>
        <div class="row ">
            <div class="col-md-6">
                <div class="card">
                    <div class="card-header bg-primary">
                        <div class="card-title"><h2>Characters</h2></div>
                    </div>
                    <div>
                        <div class="card-body">
                            @if(characters.Any()){
                                @foreach(var character in characters)
                                {
                                    <div class="row">
                                        <a class="btn btn-outline-primary" href="/character/@character.Id">
                                            @character.Name 
                                        </a>
                                    </div>
                                }
                            }
                            else
                            {
                                <p>No characters have been added</p>
                            }
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="card">
                    <div class="card-header bg-primary">
                        <div class="card-title"><h2>Games</h2></div>
                    </div>
                    <div>
                        <div class="card-body">
                            @if(characters.Any()){
                                @foreach(var game in games)
                                {
                                    <div class="row">
                                        <a class="btn btn-outline-primary" href="/game/@game.Id">
                                            @game.Name 
                                        </a>
                                    </div>
                                }
                            }
                            else
                            {
                                <p>No games have been added</p>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </Authorized>
    <NotAuthorized>
        <div class="unauthed-home">
            <h3>Welcome to FATE Coordinator</h3>
            <jumbotron>
                The purpose of this site is to manage games played in the FATE Core/Condensed tabletop RPG system.  Please <a href="Identity/Account/Login">log in</a> or <a href="Identity/Account/Register">register</a> to start using the application.  
            </jumbotron>
        </div>
    </NotAuthorized>
</AuthorizeView>

@code{
    private IEnumerable<CharacterDto> characters = Enumerable.Empty<CharacterDto>();
    private IEnumerable<GameDto> games = Enumerable.Empty<GameDto>();

    protected override async Task OnInitializedAsync()
    {
        this.characters = await this.characterRepository.GetAllAsync(await this.GetUserIdAsync());
        this.games = await this.gameRepository.GetAllAsync(await this.GetUserIdAsync());
        await base.OnInitializedAsync();
    }

    private async Task<Guid> GetUserIdAsync()
    {
        return await this.authenticationStateProvider.GetUserIdAsync();
    }
}
